void dfsfunc(int node,vector<vector<int>>& adj,int vis[],vector<int>&ls){
      vis[node]=1;
      ls.push_back(node);
      for(auto it:adj[node]){
          if(!vis[it]){
              dfsfunc(it,adj,vis,ls);
          }
      }
      
  }
    vector<int> dfs(vector<vector<int>>& adj) {
        int n=adj.size();
        int vis[n]={0};
        int start=0;
        vector<int>ls;
        dfsfunc(start,adj,vis,ls);
        return ls;
    }


Time complexicity-O(n+m);
Space complexicity-O(n);
